<?xml version="1.0"?>
<launch>
	
	<arg name="ultrasonics_params" default="$(find cnbiros_wheelchair)/params/ros_wheelchair_ultrasonics_to_pointcloud.yaml"/>
	<arg name="enable_sonars" default="0" />

<!-- *************************** Sensors *********************************** -->
	<group if="$(arg enable_sonars)">
	<!-- *********** UltraSonic sensors ***************** -->	
	<node name="sonars_right" pkg="cnbiros_wheelchair" type="ros_wheelchair_ultrasonics" output="screen" respawn="true" respawn_delay="10">
		<rosparam command="load" file="$(find cnbiros_wheelchair)/launch/ros_wheelchair_ultrasonics_right.yaml"/>
	</node>	
	<node name="sonars_left" pkg="cnbiros_wheelchair" type="ros_wheelchair_ultrasonics" output="screen" respawn="true" respawn_delay="10">
		<rosparam command="load" file="$(find cnbiros_wheelchair)/launch/ros_wheelchair_ultrasonics_left.yaml"/>
	</node>	
	<!-- *********** UltraSonic filters ***************** -->	
	<node pkg="cnbiros_filters" type="multi_range_to_range_filter_chain" output="screen" name="sonars_filters">
		<rosparam command="load" file="$(find cnbiros_wheelchair)/launch/ros_wheelchair_ultrasonics_filters.yaml" />
	</node>

	<!-- *********** UltraSonic to pointcloud ***************** -->	
	<node pkg="cnbiros_wheelchair" type="ros_wheelchair_ultrasonics_to_pointcloud" output="screen" name="ros_wheelchair_ultrasonics_to_pointcloud" >
		<rosparam subst_value="True" file="$(arg ultrasonics_params)" command="load" />
	</node>

	</group>
	<!-- *********** Kinect LaserScan ***************** -->		
	<include file="$(find cnbiros_wheelchair)/launch/ros_kinect_to_laserscan.launch" />


<!-- *************************** Motors ************************************ -->
	<include file="$(find cnbiros_wheelchair)/launch/ros_wheelchair_motors.launch">
		<arg name="port" value="/dev/controller" />
	</include>
	
	
<!-- *************************** Odometry ************************************ -->
	<include file="$(find cnbiros_wheelchair)/launch/ros_wheelchair_odometry.launch">
		<arg name="lport" value="/dev/encoder.left" />
		<arg name="rport" value="/dev/encoder.right" />
		<arg name="revolution" value="280" />
	</include>

<!-- ************************ Transformations ****************************** -->
	<node pkg="robot_state_publisher" type="robot_state_publisher" name="robot_state_publisher" >
		<param name="publish_frequency" value="200" />
		<!-- <param name="use_tf_static" value="False" /> -->
	</node>
	<node pkg="joint_state_publisher" type="joint_state_publisher" name="joint_state_publisher" />

<!-- ************************ Model ****************************** -->
	<include file="$(find cnbiros_wheelchair_description)/launch/ros_wheelchair_description.launch" />

	<!-- <param name="robot_description" textfile="$(find cnbiros_wheelchair_description)/model/wheelchair.urdf" /> -->

</launch>
